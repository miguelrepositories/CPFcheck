# -*- coding: utf-8 -*-
"""ValidarCPF.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GK8BHzGdJ5q7zbf9TiBrseZRqcb-GRsP
"""

import sys 
cpf = input("DIGITE SEU CPF (SOMENTE OS NÚMEROS): ")
if len(cpf) != 11: #Verifica se a quantidade de números é diferente de 11.
    print("CPF INVÁLIDO. POR FAVOR, VERIFIQUE!")
    sys.exit()
elif cpf[0]==cpf[1]==cpf[2]==cpf[3]==cpf[4]==cpf[5]==cpf[6]==cpf[7]==cpf[8]==cpf[9]==cpf[10]: #Verifica se todos os números são iguais
    print("CPF INVÁLIDO. POR FAVOR, VERIFIQUE!")
    sys.exit(0)
cpf = [int(n) for n in cpf] #Converte cada caracter da string 'cpf' para inteiro e armazena numa list de nome 'cpf'
mult = [10,9,8,7,6,5,4,3,2]
soma = 0
for i in range(9): #Multiplica cada posição da list 'mult' pela respectiva posição da list 'cpf' e soma cada resultado
    soma += mult[i]*cpf[i] 
dv1 = (soma*10)%11 #Multiplica a 'soma' por 10 e divide por 11 armazenando o resto desta divisão em 'dv1'
if dv1 == 10 or dv1 == 11: #Se o primeiro dígito(dv1) for igual a 10 ou 11, então considera-se como '0'
    dv1 = 0  
if dv1 != cpf[9]: #Verifica se o primeiro dígito(dv1) obtido é diferente do primeiro dígito do CPF informado
    print("CPF INVÁLIDO. POR FAVOR, VERIFIQUE!")
    sys.exit(0)
mult = [11,10,9,8,7,6,5,4,3,2]
soma = 0
for i in range(10): #Repete o mesmo cálculo desta vez para o segundo dígito verificador do CPF informado
    soma += mult[i]*cpf[i] 
dv2 = (soma*10)%11
if dv2 == 10 or dv2 == 11: 
    dv2 = 0 
if dv2 != cpf[10]: #Verifica se o segundo dígito(dv2) obtido é diferente do segundo dígito do CPF informado
    print("CPF INVÁLIDO. POR FAVOR, VERIFIQUE!")
    sys.exit(0)
else: #Se nenhuma condição de erro foi encontrada, então o CPF é Válido.
    print("\n%d%d%d.%d%d%d.%d%d%d-%d%d" % (cpf[0],cpf[1],cpf[2],cpf[3],cpf[4],cpf[5],cpf[6],cpf[7],cpf[8],cpf[9],cpf[10]))
    print("\nCPF VÁLIDO!")